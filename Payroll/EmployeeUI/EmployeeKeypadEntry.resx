<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="img_Ribbon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="img_Avatar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADUAAAA1CAYAAADh5qNwAAABemlDQ1BJQ0MgUHJvZmlsZQAAKM9jYGAq
        SSwoyGFhYGDIzSspCnJ3UoiIjFJgv8PAzcDDIMRgxSCemFxc4BgQ4MOAE3y7xsAIoi/rgsxK8/x506a1
        fP4WNq+ZclYlOgz4AXdKanEyAwMjB5CdnFKcnAtk5wDZOskFRSVA9gwgW7e8pADEPgFkixQBHQhk3wGx
        0yHsDyB2EpjNxAJWExLkDGRLANkCSRC2BoidDmFbgNjJGYkpQLYHyC6IG8CA08NFwdzAUteRgcogN6cU
        ZgcotHhS80KDQe4AYhkGDwYXBgUGcwYDBksGXQbHktSKEpBC5/yCyqLM9IwSBUdgyKYqOOfnFpSWpBbp
        KHjmJevpKBgZGBqA1IHiDGL05yCw6Yxi5xFi+QsZGCyVGRiYexBiSdMYGLbvYWCQOIUQU5nHwMBvzcCw
        7VxBYlEi3OGM31gI8YvTjI0gbB4nBgbWe///f1ZjYGCfxMDwd+L//78X/f//dzHQfmCcHcgBACR3aeD1
        0IV6AAACz0lEQVRoQ+2ZO4siQRSF90/6fkQG/gRNRNRAEQ3N9S+IkYEGRpr4ClRUDBUUFER8gLXcpu/F
        vazTXdW17rTOBwdquuuc7jPY5VTPL/GG/JRyC59RyuPxuE6czyrlBl5a6nq9iul0Kur1uiiVSiIejxsq
        l8vGMTgHc5zyslKDwUDEYjHKeSaYMxwOTZcamMXRWqrf74tAIEAZVoK54FEFczjaSq3XaxGNRslvV+AB
        rwqYwdFWqlAokFdW+XzeTJED/RwtpQ6Hg/B6veSVFXj3+72ZZh/0c7SUGo/H5FOVyqKBXs63KTUajcw0
        +6CXo6XUYrEgn6rm87mZZh/0crSU2u125FPVdrs10+yDXo6WUsfjUfh8PvLKChYKyJAF/RzHpe73u8hm
        s+RTVSaTMbJkQC/HcSkdiwQKsmRAH8dxqW63Sx6ngiwZ0MdxXAoecCdfvCjIkF0s0MvRslB0Oh0RCoXI
        KyvwQoYs6OdoKQVMJhPyygq8KqCfo60UbPqCwSD57Qq2H5fLxUyRAzM42koBxWKR/HYFHlUwg6O1FPy5
        JLNowFzwqII5HK2lgFqtRhlWgrlOwByO9lKr1YoyrARznYA5HO2llsslZVgJ5joBczjaS8lsQ5w8TwDm
        cLSXgn0RZlhJZQ/1COZwtJY6n8+i1WpRhpXa7bbhUQVzOI5LbTYb0Wg0jK2D3+8nv12BB7yQIfuqDDM4
        SqVOp5PxW4abwfm6BJmQDdewAj0cqVLwDFQqFREOh2nevxJcA6711XOHczm2SsH78VQqRedeLbj2316h
        4XnOl6XgM57L5ejY/xbcy+Nzh8c5T0vBLvQVHzNZRSIR0ev1/rhXztNSKtuIVwnu7Xa70c+cp6W+u2az
        GY05ri3VbDZpzHFtqWq1SmOOa0vB/49xzHFtqXQ6TWOOa0slk0kac1xbKpFI0Jjj2lKP4nxGqXfgp5Rb
        eMNSQvwG+cZdt4ib5T4AAAAASUVORK5CYII=
</value>
  </data>
</root>